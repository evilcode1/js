import requests
import re
import time

# Configuration
url = "https://www.site.com/graphql"
headers = {
    "Host": "www.site.com",
    "Cookie": "_csrf=xxxxx; jwt=xxx.xxx.xxx;",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:133.0) Gecko/20100101 Firefox/133.0",
    "Accept": "application/json",
    "Accept-Language": "en-US,en;q=0.5",
    "Accept-Encoding": "gzip, deflate, br",
    "X-Goat-Sales-Channel": "2",
    "X-Csrf-Token": "xxxxxxxxxxxxxxxxxxxxx",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "X-Pwnfox-Color": "magenta",
    "Te": "trailers"
}

# Load the wordlist
with open(r"/home/kali/Desktop/raft-large-words-lowercase.txt", "r") as file:
    wordlist = [line.strip() for line in file]

# Function to send the request and grep the response
def fuzz_placeholder(word):
    query = f'{{{word}{{name}}}}'
    #print(f"[+] Sending request with placeholder: {word}")
    
    try:
        response = requests.get(url, headers=headers, params={"query": query})
        text = response.text

        # Regular expression to extract the suggestion
        match = re.search(r'Did you mean \\"(.*?)\\"', text)
        
        # Format the output
        if match:
            print(f"Did you mean: {match.group(1)}")
        else:
            pass

    except requests.exceptions.RequestException as e:
        print(f'[-] Error: {e}')

# Send requests with 1-second intervals
for word in wordlist:
    fuzz_placeholder(word)
    time.sleep(1)
